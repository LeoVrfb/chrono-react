{"version":3,"sources":["Images/pause.svg","Images/play.svg","Images/reset.svg","Chrono/Chrono.js","App.js","index.js"],"names":["Chrono","useState","sessionTime","setSessionTime","sessionTimeFixed","setSessionTimeFixed","breakTime","setBreakTime","breakTimeFixed","setBreakTimeFixed","workingChrono","setWorkingChrono","useReducer","state","action","type","dispatch","useEffect","id","window","setInterval","clearInterval","handleBreak","e","el","target","classList","contains","handleSession","className","onClick","Math","trunc","src","PauseImg","PlayImg","alt","ResetImg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,kC,OCM1B,SAASA,IAAU,IAAD,EACOC,mBAAS,MADhB,mBACxBC,EADwB,KACXC,EADW,OAEiBF,mBAAS,MAF1B,mBAExBG,EAFwB,KAENC,EAFM,OAIGJ,mBAAS,KAJZ,mBAIxBK,EAJwB,KAIbC,EAJa,OAKaN,mBAAS,KALtB,mBAKxBO,EALwB,KAKRC,EALQ,OAOWR,oBAAS,GAPpB,mBAOxBS,EAPwB,KAOTC,EAPS,OASLC,sBAC1B,SAAiBC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,OACCb,GAAe,EACjBC,EAAeD,EAAc,GACpBI,GAAa,EACtBC,EAAaD,EAAY,GAChBA,GAAa,GAAKA,GAAa,IACxCH,EAAeC,GACfG,EAAaC,QAnBU,mBASjBQ,GATiB,WA2B/BC,qBAAU,WACR,IAAIC,EAMJ,OALIR,IACFQ,EAAKC,OAAOC,aAAY,WACtBJ,EAAS,CAAED,KAAM,WAChB,MAEE,WACLI,OAAOE,cAAcH,MAEtB,CAACR,IAEJ,IAAMY,EAAc,SAAAC,GACd,IAAMC,EAAKD,EAAEE,OACVD,EAAGE,UAAUC,SAAS,SAClBrB,EAAY,GAAK,IAChBC,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,KAGnCgB,EAAGE,UAAUC,SAAS,UACtBpB,EAAaD,EAAY,IACzBG,EAAkBD,EAAiB,MAK3CoB,EAAgB,SAAAL,GACpB,IAAMC,EAAKD,EAAEE,OACVD,EAAGE,UAAUC,SAAS,SAClBzB,EAAc,GAAK,IAClBC,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,KAGvCoB,EAAGE,UAAUC,SAAS,UACtBxB,EAAeD,EAAc,IAC7BG,EAAoBD,EAAmB,MAYjD,OACE,sBAAKyB,UAAWnB,EAAgB,6BAA+B,mBAA/D,UACE,sBAAKmB,UAAU,mBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,wBAAQA,UAAU,QAASC,QAASF,EAApC,eACA,+BAAOxB,EAAmB,KAC1B,wBAAQyB,UAAU,OAAOC,QAASF,EAAlC,kBAGF,sBAAKC,UAAU,iBAAf,UACE,wBAAQA,UAAU,QAAQC,QAASR,EAAnC,eACA,+BAAOd,EAAiB,KACxB,wBAAQqB,UAAU,OAAOC,QAASR,EAAlC,qBAIJ,6BACGpB,GAAe,EACd,yCACM6B,KAAKC,MAAM9B,EAAc,IAD/B,cAEIA,EAAc,GAAK,GAAnB,WACQA,EAAc,IADtB,UAEOA,EAAc,OAIzB,yCACM6B,KAAKC,MAAM1B,EAAY,IAD7B,cAEIA,EAAY,GAAK,GAAjB,WACQA,EAAY,IADpB,UAEOA,EAAY,SAM3B,sBAAKuB,UAAU,wBAAf,UACE,wBAAQC,QAzFI,WAChBnB,GAAkBD,IAwFd,SACE,qBAAKuB,IAAKvB,EAAgBwB,EAAWC,EAASC,IAAI,OAEpD,wBACAN,QAhDW,WACXpB,GACCC,GAAkBD,GAEtBP,EAAeC,GACfG,EAAaC,IA0CV,SAEE,qBAAKyB,IAAKI,EAAUD,IAAI,aClHnBE,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACI,cAAC,EAAD,OCARU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.158ef51a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause.f8c47a1a.svg\";","export default __webpack_public_path__ + \"static/media/play.b23df41a.svg\";","export default __webpack_public_path__ + \"static/media/reset.adefad1d.svg\";","import React, { useState, useEffect, useReducer } from \"react\";\r\nimport \"./Chrono.css\";\r\nimport PauseImg from \"../Images/pause.svg\";\r\nimport PlayImg from \"../Images/play.svg\";\r\nimport ResetImg from \"../Images/reset.svg\";\r\n\r\nexport default function Chrono() {\r\n  const [sessionTime, setSessionTime] = useState(1500);\r\n  const [sessionTimeFixed, setSessionTimeFixed] = useState(1500);\r\n\r\n  const [breakTime, setBreakTime] = useState(300);\r\n  const [breakTimeFixed, setBreakTimeFixed] = useState(300);\r\n\r\n  const [workingChrono, setWorkingChrono] = useState(false);\r\n\r\n  const [state, dispatch] = useReducer(reducer);\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"TICK\":\r\n        if (sessionTime >= 0) {\r\n          setSessionTime(sessionTime - 1);\r\n        } else if (breakTime >= 1) {\r\n          setBreakTime(breakTime - 1);\r\n        } else if (breakTime <= 0 && breakTime <= 0) {\r\n          setSessionTime(sessionTimeFixed);\r\n          setBreakTime(breakTimeFixed);\r\n        }\r\n    }\r\n  }\r\n\r\n  const PlayPause = () => {\r\n    setWorkingChrono(!workingChrono);\r\n  };\r\n  useEffect(() => {\r\n    let id;\r\n    if (workingChrono) {\r\n      id = window.setInterval(() => {\r\n        dispatch({ type: \"TICK\" });\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      window.clearInterval(id);\r\n    };\r\n  }, [workingChrono]);\r\n\r\n  const handleBreak = e => {\r\n        const el = e.target;\r\n        if(el.classList.contains('minus')) {\r\n            if(breakTime / 60 > 1) {\r\n                setBreakTime(breakTime - 60)\r\n                setBreakTimeFixed(breakTimeFixed - 60)\r\n            }\r\n        }\r\n        else if(el.classList.contains('plus')) {\r\n                setBreakTime(breakTime + 60)\r\n                setBreakTimeFixed(breakTimeFixed + 60)\r\n            }\r\n        }\r\n  \r\n\r\n  const handleSession = e => {\r\n    const el = e.target;\r\n    if(el.classList.contains('minus')) {\r\n        if(sessionTime / 60 > 1) {\r\n            setSessionTime(sessionTime - 60)\r\n            setSessionTimeFixed(sessionTimeFixed - 60)\r\n        }\r\n    }\r\n    else if(el.classList.contains('plus')) {\r\n            setSessionTime(sessionTime + 60)\r\n            setSessionTimeFixed(sessionTimeFixed + 60)\r\n        }\r\n    }\r\n \r\n\r\n const resetFunc = () => {\r\n     if(workingChrono) {\r\n         setWorkingChrono(!workingChrono)\r\n     }\r\n     setSessionTime(sessionTimeFixed)\r\n     setBreakTime(breakTimeFixed)\r\n }\r\n  return (\r\n    <div className={workingChrono ? \"container-chrono anim-glow\" : \"container-chrono\"}>\r\n      <div className=\"container-config\">\r\n        <div className=\"box-btns session\">\r\n          <button className=\"minus\"  onClick={handleSession}>-</button>\r\n          <span>{sessionTimeFixed / 60}</span>\r\n          <button className=\"plus\" onClick={handleSession}>+</button>\r\n        </div>\r\n\r\n        <div className=\"box-btns break\">\r\n          <button className=\"minus\" onClick={handleBreak}>-</button>\r\n          <span>{breakTimeFixed / 60}</span>\r\n          <button className=\"plus\" onClick={handleBreak}>+</button>\r\n        </div>\r\n      </div>\r\n\r\n      <h1>\r\n        {sessionTime >= 0 ? (\r\n          <span>\r\n            {`${Math.trunc(sessionTime / 60)} : ${\r\n              sessionTime % 60 < 10\r\n                ? `0${sessionTime % 60}`\r\n                : `${sessionTime % 60}`\r\n            }`}\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            {`${Math.trunc(breakTime / 60)} : ${\r\n              breakTime % 60 < 10\r\n                ? `0${breakTime % 60}`\r\n                : `${breakTime % 60}`\r\n            }`}\r\n          </span>\r\n        )}\r\n      </h1>\r\n\r\n      <div className=\"container-controllers\">\r\n        <button onClick={PlayPause}>\r\n          <img src={workingChrono ? PauseImg : PlayImg} alt=\"\" />\r\n        </button>\r\n        <button\r\n        onClick= {resetFunc}>\r\n          <img src={ResetImg} alt=\"\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Chrono from './Chrono/Chrono'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Chrono />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}